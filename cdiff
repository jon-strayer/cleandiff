#!/usr/bin/env sh
#echo "LOCAL: $1"
#echo "REMOTE: $2"
#echo "MERGED: $3" # unused

TEMP_FILE="$(mktemp /tmp/cleandifffapp.XXXXXX).cdiff"
HTML_EXTENSION=".html"

# The heart of our functionality. 
# diff the files and have dwdiff break the results down into smaller "words"
diff -u $1 $2 | dwdiff -A best -L -c -d "\x0A%,;/:._{}[]()'|-=~>\"\\\\" \
	--diff-input - | cat > $TEMP_FILE

# Extract the name of the file we're diffing
# $1 and $2 aren't trustable as names because 
# when used with git diff(tool) they'll just be temp files.
# There are a couple lines which start with --- and +++
# which mention the name of the "left" and "right" sides of the diff. 
# I've chosen the "right" one because it's more likely to be 
# what you ended up with.
FILE_NAME=`grep -m1 --color=none +++ $TEMP_FILE | sed -e 's/+++ //' -e 's/	.*//'`

# Clean up the dwdiff output.
# * Strip out the lines we don't need (like the ones showing what files
#   are being diffed).
# * Remove the + at the start of some lines (see Issue #2)
# * Remove the leading whitespace before the line numbers
cat $TEMP_FILE \
	| sed -e '/^\+\+\+/ d' -e '/^---/ d' -e '/^@@.*@@/d' \
		-e 's/^+//'\
	| sed -E 's/^ +([0-9]+:[0-9]+)/\1/' \
	| sed -E "s/("$'\E'"\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]) +([0-9]+)/\1\5/g" \
	> "$TEMP_FILE.2"
mv "$TEMP_FILE.2" $TEMP_FILE
# ^^^  this version can be used by vim, emacs, etc 
# assuming they've got a plugin to support ANSI Escape Codes

#DEBUG
#gvim -O $TEMP_FILE
#sleep 0.5

# Convert the ncurses to html
# passing in a title, even though we're also passing in the 
# --no-header option, which is kind-of silly, but I'm leaving it 
# because it doesn't hurt and we may want it some day.
cat $TEMP_FILE \
	| aha --stylesheet --no-header -t "$FILE_NAME" \
	> $TEMP_FILE$HTML_EXTENSION

# Clean up the HTML
# NOTE:
#  The weird newlines in the middle of the sed substitutions are because 
#  it seems to be the best way to get a newline in there.. :/
# 
# * build table cells and rows around line numbers, and comments.
cat $TEMP_FILE$HTML_EXTENSION \
	| sed -E "s|^([0-9]+:[0-9]+) {4}|</td></tr>\
<tr class='line pre' valign='top'><td class='linenums'>\1</td><td class='source'>|" \
	| sed -E "s|^</span>([0-9]+:[0-9]+) {0,4}|</span></td></tr>\
<tr class='line pre' valign='top'><td class='linenums'>\1</td><td class='source'>|" \
	> "$TEMP_FILE.partial.$HTML_EXTENSION"


# Haz ourselves some CSS
# for prettification.
CSS=$(cat <<EOL
body{
	background: rgb(36,36,36);
	color: rgb(223, 216, 206);
}
.pre {
	font-family: monospace;
	white-space: pre;
}
tr {
	border: solid 1px black;
	margin: 0px;
}
td.linenums{
	margin-right: 1rem;
	padding-right: 0.5rem;
	border-right: solid 1px #ccc;
	text-align: right;
	color: rgb(255,222,165);
}
td.source{
	margin-left: 1rem;
	padding-left: 0.5rem;
}
.bold {font-style: bold;}
.green { color: #79DB73;}
.red { color: #f1a340;}

EOL)

# Haz ourselves some HTML 
# for browserfication.
HEADER=$(cat <<EOL
<html>
	<head>
		<title>$FILE_NAME</title>
		<style>
		$CSS
		</style>
	</head>
	<body>
		<table cellpadding="0" cellspacing="0">
			<tr style="display: none"><td></td><td ><!-- temporary to compensate for 1st one -->
EOL)


# Mas HTML por favor.
FOOTER=$(cat <<EOL
</table>
	</body>
</html>
EOL)

# you put your header in, you put your css in, you put your footer in 
# and you shake it all around.
echo "$HEADER$(<"$TEMP_FILE.partial.$HTML_EXTENSION")$FOOTER" > $TEMP_FILE$HTML_EXTENSION
# You do the hokey pokey, and you turn yourself around.
# That's what it's all about.

#gvim:
#gvim $TEMP_FILE

#MacVim:
#mvim $TEMP_FILE

#vim $TEMP_FILE

# Your default browser
#open $TEMP_FILE$HTML_EXTENSION

#Chrome (on os x)
#open -a Google\ Chrome $TEMP_FILE$HTML_EXTENSION

# Safari (on os x)
#open -a Safari $TEMP_FILE$HTML_EXTENSION

# Firefox (on os x)
open -a Firefox $TEMP_FILE$HTML_EXTENSION

sleep 0.5
rm $TEMP_FILE $TEMP_FILE$HTML_EXTENSION

exit 0
